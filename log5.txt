Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))), Ref(int) v]
Symbol Table: 
{}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))))]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))), HeapAllocating(v->20)]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))), Ref(Ref(int)) a]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))), HeapAllocating(a->v)]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))), HeapAllocating(v->30)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a))), HeapAllocating(v->40)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a)))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 
20

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))), Ref(int) v]
Symbol Table: 
{}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))), Ref(int) v]
Symbol Table: 
{}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))))]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))), HeapAllocating(v->20)]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))), Ref(Ref(int)) a]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))), HeapAllocating(a->v)]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))), HeapAllocating(v->30)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a))), HeapAllocating(v->40)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a)))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 
20

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))), Ref(int) v]
Symbol Table: 
{}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))))]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))), HeapAllocating(v->20)]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))), Ref(Ref(int)) a]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))), HeapAllocating(a->v)]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))), HeapAllocating(v->30)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a))), HeapAllocating(v->40)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a)))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 
20

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))), Ref(int) v]
Symbol Table: 
{}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->20);(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))))]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))), HeapAllocating(v->20)]
Symbol Table: 
{v=referenceValue(0-> int)}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(Ref(Ref(int)) a;(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))))]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))), Ref(Ref(int)) a]
Symbol Table: 
{v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(a->v);(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))))]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))), HeapAllocating(a->v)]
Symbol Table: 
{a=referenceValue(0-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->30);(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a)))), HeapAllocating(v->30)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(1-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int)}

Id: 
1
Execution Stack: 
[(HeapAllocating(v->40);print(HeapReading(HeapReading(a))))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a))), HeapAllocating(v->40)]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(3-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30}

Id: 
1
Execution Stack: 
[print(HeapReading(HeapReading(a)))]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[]
Symbol Table: 
{a=referenceValue(2-> Ref(int)), v=referenceValue(4-> int)}
Output List: 
20

File Table: 
{}
Heap: 
{1=20, 2=referenceValue(1-> int), 3=30, 4=40}

Id: 
1
Execution Stack: 
[(v = 4;((while(v > 0)(print(v);v = v - 1));print(v))), int v]
Symbol Table: 
{}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[(v = 4;((while(v > 0)(print(v);v = v - 1));print(v)))]
Symbol Table: 
{v=0}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[((while(v > 0)(print(v);v = v - 1));print(v)), v = 4]
Symbol Table: 
{v=0}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[((while(v > 0)(print(v);v = v - 1));print(v))]
Symbol Table: 
{v=4}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1))]
Symbol Table: 
{v=4}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), (print(v);v = v - 1)]
Symbol Table: 
{v=4}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1, print(v)]
Symbol Table: 
{v=4}
Output List: 

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1]
Symbol Table: 
{v=4}
Output List: 
4

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1))]
Symbol Table: 
{v=3}
Output List: 
4

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), (print(v);v = v - 1)]
Symbol Table: 
{v=3}
Output List: 
4

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1, print(v)]
Symbol Table: 
{v=3}
Output List: 
4

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1]
Symbol Table: 
{v=3}
Output List: 
4
3

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1))]
Symbol Table: 
{v=2}
Output List: 
4
3

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), (print(v);v = v - 1)]
Symbol Table: 
{v=2}
Output List: 
4
3

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1, print(v)]
Symbol Table: 
{v=2}
Output List: 
4
3

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1]
Symbol Table: 
{v=2}
Output List: 
4
3
2

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1))]
Symbol Table: 
{v=1}
Output List: 
4
3
2

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), (print(v);v = v - 1)]
Symbol Table: 
{v=1}
Output List: 
4
3
2

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1, print(v)]
Symbol Table: 
{v=1}
Output List: 
4
3
2

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1)), v = v - 1]
Symbol Table: 
{v=1}
Output List: 
4
3
2
1

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v), (while(v > 0)(print(v);v = v - 1))]
Symbol Table: 
{v=0}
Output List: 
4
3
2
1

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[print(v)]
Symbol Table: 
{v=0}
Output List: 
4
3
2
1

File Table: 
{}
Heap: 
{}

Id: 
1
Execution Stack: 
[]
Symbol Table: 
{v=0}
Output List: 
4
3
2
1
0

File Table: 
{}
Heap: 
{}

